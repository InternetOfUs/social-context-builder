[{"Explanation": {"Context": ["relevant(development)"], "Triggered rules": {"R1": "worksOn(X,Y) AND relevant(X)IMPLIES suggest(Y)"}, "Facts": ["worksOn(development, bob"]}}, {"Explanation": {"Context": ["relevant(development)", "request_exp(development)", "request_cert(java)"], "Triggered rules": {"R1": " worksOn(X,Y) AND relevant(X) AND experienced_enough(Y) AND certifiedAt(Z,Y)IMPLIES suggest(Y)", "R2": "experienced(Y) AND request_exp(X) AND worksOn(X,Y) IMPLIES experienced_enough(Y)", "R3": "request_cert(X) AND hasCert(Y, X) IMPLIES certifiedAt(X, Y)"}, "Facts": ["worksOn(development, bob", "experienced(bob)", "hasCert(bob,java)"]}}, {"Explanation": {"Context": ["relevant(development)", "minimum_exp(development, 5)", "request_cert(java)"], "Triggered rules": {"R1": "worksOn(X, Y) AND relevant(X) AND experienced_enough(Y) AND certifiedAt(Z, Y)AND NOT employed(Y)IMPLIES suggest(Y)", "R2": "exp_of_at(Y, X, W) AND minimum_exp(X, Z) AND W > Z AND worksOn(X, Y)IMPLIES experienced_enough(Y)", "R3": "request_cert(X) AND hasCert(Y, X) IMPLIEScerifiedAt(X, Y)"}, "Facts": ["worksOn(development, bob)", "exp_of_at(bob, development, 7)", "hasCert(bob, java)", "NOT employed(bob)"]}}]